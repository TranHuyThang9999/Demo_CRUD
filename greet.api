syntax = "v1"

info (
	title: // TODO: add title
	desc: // TODO: add description
	author: "huythang"
	email: "tranhuythang9999@gmail.com"
)

type request {
	// TODO: add members here and delete this comment
	Message string `json:"message"`
}

type response {
	// TODO: add members here and delete this comment
	Message string `json:"message"`
}
type User {
	Id       int64  `json:"id"`
	UserName string `json:"user_name"`
	Password string `json:"password"`
	Age      int64  `json:"age"`
	Address  string `json:"address"`
	Gender   string `json:"gender"`
}
type UserReponse {
	Message string `json:"message"`
}
type UserRequest {
	UserName string `json:"user_name"`
	Password string `json:"password"`
	Age      int64  `json:"age"`
	Address  string `json:"address"`
	Gender   string `json:"gender"`
}
type (
	LoginReq {
		UserName string `json:"user_name"`
		Password string `json:"password"`
	}

	LoginReply {
		Id           int64  `json:"id"`
		UserName     string `json:"user_name"`
		Gender       string `json:"gender"`
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)
type requestId {
	// TODO: add members here and delete this comment
	Id int64 `json:"id"`
}
type (
	SearchReq {
		Name string `form:"name"`
	}

	SearchReply {
		Name  string `json:"name"`
		Count int    `json:"count"`
	}
)
type ReponseListUser {
	User []User `json:"user"`
}

service greet-api {
	@handler login
	post /user/login (LoginReq) returns (LoginReply)
}

@server(
	jwt: Auth
	middleware: Example
)
service greet-api {
	@handler GetUser // TODO: set handler name and delete this comment
	get /users/id/:userId(request) returns(response)
	
	@handler CreateUser // TODO: set handler name and delete this comment
	post /users/create(UserRequest) returns (bool)
	
	@handler GetById
	get /user/id/:id (requestId) returns (User)
	
	@handler  GetAll
	get /users/all () returns (ReponseListUser)
	
	// UpdateById handles the update operation for a user by id.
	@handler UpdateById
	patch /user/update/id (User) returns (User)
	
	// DeleteById handles the delete operation for a user by id.
	@handler DeleteById
	delete /user/delete/id (User) returns (User)
	
}